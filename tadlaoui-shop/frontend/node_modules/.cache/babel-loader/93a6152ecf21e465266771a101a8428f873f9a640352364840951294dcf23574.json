{"ast":null,"code":"// firebase.js\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\n\n// Configuration Firebase\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAsMUDuLqtGd5rN3_MT-ZPw7_bFwv9TyNs\",\n  authDomain: \"yassine-f635d.firebaseapp.com\",\n  projectId: \"yassine-f635d\",\n  storageBucket: \"yassine-f635d.firebasestorage.app\",\n  messagingSenderId: \"547676971822\",\n  appId: \"1:547676971822:web:a361858902b86fd455d0bf\",\n  measurementId: \"G-3HHF2FK0E2\"\n};\n\n// Initialiser Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Authentification Firebase\nexport const auth = getAuth(app);\nexport const googleProvider = new GoogleAuthProvider();\n\n// Fonction d'authentification avec Google\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    const user = result.user;\n    console.log(user);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Authentification par email et mot de passe\nexport const signUpWithEmailPassword = (email, password) => {\n  return createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInWithEmailPassword = (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\n// Déconnexion\nexport const signOutUser = () => {\n  return signOut(auth);\n};","map":{"version":3,"names":["getAuth","GoogleAuthProvider","signInWithPopup","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","googleProvider","signInWithGoogle","result","user","console","log","error","signUpWithEmailPassword","email","password","signInWithEmailPassword","signOutUser"],"sources":["C:/Users/Redab/Desktop/TADLAOUI-SHOP/tadlaoui-shop/src/firebase.js"],"sourcesContent":["// firebase.js\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Configuration Firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAsMUDuLqtGd5rN3_MT-ZPw7_bFwv9TyNs\",\r\n  authDomain: \"yassine-f635d.firebaseapp.com\",\r\n  projectId: \"yassine-f635d\",\r\n  storageBucket: \"yassine-f635d.firebasestorage.app\",\r\n  messagingSenderId: \"547676971822\",\r\n  appId: \"1:547676971822:web:a361858902b86fd455d0bf\",\r\n  measurementId: \"G-3HHF2FK0E2\"\r\n};\r\n\r\n// Initialiser Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Authentification Firebase\r\nexport const auth = getAuth(app);\r\nexport const googleProvider = new GoogleAuthProvider();\r\n\r\n// Fonction d'authentification avec Google\r\nexport const signInWithGoogle = async () => {\r\n  try {\r\n    const result = await signInWithPopup(auth, googleProvider);\r\n    const user = result.user;\r\n    console.log(user);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Authentification par email et mot de passe\r\nexport const signUpWithEmailPassword = (email, password) => {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInWithEmailPassword = (email, password) => {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\n// Déconnexion\r\nexport const signOutUser = () => {\r\n  return signOut(auth);\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,QAAQ,eAAe;AACjJ,SAASC,aAAa,QAAQ,cAAc;;AAE5C;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,mCAAmC;EAClDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGT,aAAa,CAACC,cAAc,CAAC;;AAEzC;AACA,OAAO,MAAMS,IAAI,GAAGhB,OAAO,CAACe,GAAG,CAAC;AAChC,OAAO,MAAME,cAAc,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;;AAEtD;AACA,OAAO,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMjB,eAAe,CAACc,IAAI,EAAEC,cAAc,CAAC;IAC1D,MAAMG,IAAI,GAAGD,MAAM,CAACC,IAAI;IACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC1D,OAAOtB,8BAA8B,CAACY,IAAI,EAAES,KAAK,EAAEC,QAAQ,CAAC;AAC9D,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAK;EAC1D,OAAOrB,0BAA0B,CAACW,IAAI,EAAES,KAAK,EAAEC,QAAQ,CAAC;AAC1D,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAOzB,OAAO,CAACa,IAAI,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}